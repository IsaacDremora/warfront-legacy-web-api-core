// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace warfront_legacy_web_api_core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217004431_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Flag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("PlayerInformationid")
                        .HasColumnType("integer");

                    b.Property<string>("flagName")
                        .HasColumnType("text");

                    b.Property<string>("imgURL")
                        .HasColumnType("text");

                    b.Property<bool>("isFree")
                        .HasColumnType("boolean");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("PlayerInformationid");

                    b.ToTable("Flags");
                });

            modelBuilder.Entity("PlayerInformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<int>("expCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("userName")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("PlayerInf");
                });

            modelBuilder.Entity("Session", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("loserid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("sessionDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("winnerid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("loserid");

                    b.HasIndex("winnerid");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("passHash")
                        .HasColumnType("text");

                    b.Property<int?>("playerInformationid")
                        .HasColumnType("integer");

                    b.Property<string>("usernameHash")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("playerInformationid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WarriorUnit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("PlayerInformationid")
                        .HasColumnType("integer");

                    b.Property<bool>("isFree")
                        .HasColumnType("boolean");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<string>("warrioirUnitSkinName")
                        .HasColumnType("text");

                    b.Property<string>("warriorUnitSkinURL")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("PlayerInformationid");

                    b.ToTable("WarriorUnits");
                });

            modelBuilder.Entity("Flag", b =>
                {
                    b.HasOne("PlayerInformation", null)
                        .WithMany("flagAttribute")
                        .HasForeignKey("PlayerInformationid");
                });

            modelBuilder.Entity("Session", b =>
                {
                    b.HasOne("PlayerInformation", "loser")
                        .WithMany()
                        .HasForeignKey("loserid");

                    b.HasOne("PlayerInformation", "winner")
                        .WithMany()
                        .HasForeignKey("winnerid");

                    b.Navigation("loser");

                    b.Navigation("winner");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.HasOne("PlayerInformation", "playerInformation")
                        .WithMany()
                        .HasForeignKey("playerInformationid");

                    b.Navigation("playerInformation");
                });

            modelBuilder.Entity("WarriorUnit", b =>
                {
                    b.HasOne("PlayerInformation", null)
                        .WithMany("warriorUnitAttribute")
                        .HasForeignKey("PlayerInformationid");
                });

            modelBuilder.Entity("PlayerInformation", b =>
                {
                    b.Navigation("flagAttribute");

                    b.Navigation("warriorUnitAttribute");
                });
#pragma warning restore 612, 618
        }
    }
}
